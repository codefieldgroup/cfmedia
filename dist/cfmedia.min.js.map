{"version":3,"file":"cfmedia.min.js","sources":["cfmedia.min.js"],"names":["angular","module","directive","strTemplate","restrict","replace","transclude","require","scope","model","headTitle","apiUrl","srcUrl","multiple","returnModel","accept","order","filter","template","link","element","openMediaModal","find","modal","selectSave","controller","$scope","$timeout","Upload","Media","isDefined","elementsSelected","params","limit","offset","search","progress","copy","$watch","modelUpload","upload","file","forEach","item","url","fields","evt","progressPercentage","parseInt","loaded","total","success","result","elements","push","error","data","status","console","log","select","index","is","not","inArray","activeClass","value","key","splice","openMediaModalCtrl","getAll","selectSaveCtrl","length","meta","alert","loadMore","newValue"],"mappings":"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","sourcesContent":["'use strict';\n\nangular.module(\"cf\", [\n  'ngFileUpload'\n])\n\n/**\n * Directive to media upload as WordpressÂ´s media.\n * Example:\n *\n * <div cfmedia\n *   ng-model=\"test\"\n *   multiple=\"true\"\n *   url=\"/public/path/upload/\"\n *   accept=\"image/*,application/pdf\"\n *   api=\"api/media\"\n *   head=\"Upload Image\">\n *     <button type=\"button\" class=\"btn btn-default no-border\">View Media Upload</button>\n * </div>\n *\n * The directive accepts the following attributes:\n *\n * - 'ng-model' : Required.\n * - 'head'     : Optional. Default value is 'Change Image'. String with the title of the modal.\n * - 'api'      : Optional. Default value is 'api/media'. String with the route of api media.\n * - 'url'      : Optional. Default value is '/public/upload/'. String with the url to path of public images.\n * - 'multiple' : Optional. Default value is true. Boolean with the options to multiples images or not.\n * - 'return'   : Optional. Default value is 'object'. String with the format to return result, \"string\" or \"object\".\n *                If \"string\" then only return the meta field of image object.\n *                If \"object\" then return the image object.\n * - 'accept'   : Optional. Default value is 'image/*'. String with function or comma separated wildcard to filter files allowed.\n *                Other options:\n *                  .pdf,.jpg\n *                  image/*,application/pdf\n *                  audio/*\n *                  video/*\n * - 'order'    : Optional. Default value is 'date'. String with the option to order by elements result.\n * - 'filter'   : Optional. Default value is 'meta'. String with field name of object that contain image name, example: dc3443.png\n */\n  .directive('cfmedia', [function () {\n\n    var strTemplate = \"\";\n    strTemplate += \"<div class=\\\"cfmedia\\\">\";\n    strTemplate += \"  <style>\";\n    strTemplate += \"    .cfmedia .jumbotron {\";\n    strTemplate += \"      border     : 4px dashed #b4b9be;\";\n    strTemplate += \"      text-align : center;\";\n    strTemplate += \"    }\";\n    strTemplate += \"\";\n    strTemplate += \"    .cfmedia .thumbnail {\";\n    strTemplate += \"      padding       : 1px;\";\n    strTemplate += \"      border        : 0px solid #ddd;\";\n    strTemplate += \"      border-radius : 0px;\";\n    strTemplate += \"      max-height    : 190px;\";\n    strTemplate += \"      overflow      : hidden;\";\n    strTemplate += \"    }\";\n    strTemplate += \"\";\n    strTemplate += \"    .cfmedia .thumbnail img {\";\n    strTemplate += \"      height : 112px;\";\n    strTemplate += \"    }\";\n    strTemplate += \"\";\n    strTemplate += \"    .cfmedia .selected img {\";\n    strTemplate += \"      border        : 2px dashed #428BCA;\";\n    strTemplate += \"      border-radius : 0px;\";\n    strTemplate += \"    }\";\n    strTemplate += \"\";\n    strTemplate += \"    .cfmedia .cf-search {\";\n    strTemplate += \"      background-color : #EEEEEE;\";\n    strTemplate += \"      padding          : 3px 5px;\";\n    strTemplate += \"    }\";\n    strTemplate += \"  <\\/style>\";\n    strTemplate += \"  <div ng-transclude ng-click=\\\"openMediaModal(); openMediaModalCtrl()\\\"><\\/div>\";\n    strTemplate += \"\";\n    strTemplate += \"  <!-- Modal -->\";\n    strTemplate += \"  <div class=\\\"cfmedia-modal modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\">\";\n    strTemplate += \"    <div class=\\\"modal-dialog\\\" style=\\\"z-index : 1030; width : 92%;\\\">\";\n    strTemplate += \"      <div class=\\\"modal-content\\\">\";\n    strTemplate += \"        <div class=\\\"modal-header\\\">\";\n    strTemplate += \"          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;<\\/button>\";\n    strTemplate += \"          <h4 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">{{ headTitle }}<\\/h4>\";\n    strTemplate += \"        <\\/div>\";\n    strTemplate += \"        <div class=\\\"modal-body\\\">\";\n    strTemplate += \"          <div class=\\\"row\\\">\";\n    strTemplate += \"            <div class=\\\"col-md-12 col-lg-12 col-sm-12 col-xs-12\\\">\";\n    strTemplate += \"              <div class=\\\"jumbotron\\\" style=\\\"padding: 17px 0; margin-bottom: 0px;\\\"\";\n    strTemplate += \"                   ngf-drop\";\n    strTemplate += \"                   ng-model=\\\"modelUpload\\\"\";\n    strTemplate += \"                   class=\\\"drop-box\\\"\";\n    strTemplate += \"                   ngf-drag-over-class=\\\"dragover\\\"\";\n    strTemplate += \"                   ngf-multiple=\\\"true\\\"\";\n    strTemplate += \"                   ngf-allow-dir=\\\"true\\\"\";\n    strTemplate += \"                   ngf-accept=\\\"accept\\\"\";\n    strTemplate += \"                      >\";\n    strTemplate += \"                <h3 style=\\\"margin-top: -3px;color: #393939;\\\">\";\n    strTemplate += \"                  Drop files anywhere to upload\";\n    strTemplate += \"                <\\/h3>\";\n    strTemplate += \"\";\n    strTemplate += \"                <p class=\\\"lead\\\" style=\\\"color: #393939;\\\">\";\n    strTemplate += \"                  <translate>or<\\/translate>\";\n    strTemplate += \"                <\\/p>\";\n    strTemplate += \"\";\n    strTemplate += \"                <button ngf-select ngf-multiple=\\\"true\\\" ng-model=\\\"modelUpload\\\" type=\\\"button\\\"\";\n    strTemplate += \"                        class=\\\"btn btn-primary btn-lg no-border\\\"\";\n    strTemplate += \"                        style=\\\"font-size: 16px;\\\"\";\n    strTemplate += \"                        ngf-accept=\\\"accept\\\">\";\n    strTemplate += \"                  Select Files\";\n    strTemplate += \"                <\\/button>\";\n    strTemplate += \"              <\\/div>\";\n    strTemplate += \"            <\\/div>\";\n    strTemplate += \"\";\n    strTemplate += \"            <div class=\\\"col-md-12 col-lg-12 col-sm-12 col-xs-12\\\">\";\n    strTemplate += \"              <div class=\\\"col-md-12 cf-search\\\">\";\n    strTemplate += \"                <div class=\\\"input-group input-group-sm col-md-4 col-lg-4 col-sm-12 col-xs-12 pull-right\\\">\";\n    strTemplate += \"                  <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-search\\\"><\\/i><\\/span>\";\n    strTemplate += \"                  <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"search\\\" placeholder=\\\"Search ...\\\">\";\n    strTemplate += \"                <\\/div>\";\n    strTemplate += \"              <\\/div>\";\n    strTemplate += \"\";\n    strTemplate += \"              <div class=\\\"col-md-12\\\" style=\\\"height: 256px; overflow: auto; margin-top: 14px;\\\">\";\n    strTemplate += \"                <div ng-repeat=\\\"element in elements | orderBy:order:true\\\" class=\\\"col-lg-2 col-md-2 col-sm-12 col-xs-12 thumbnail\\\"\";\n    strTemplate += \"                     ng-class=\\\"{'selected': element.activeClass}\\\"\";\n    strTemplate += \"                     ng-click=\\\"select(element, $index)\\\">\";\n    strTemplate += \"                  <img ng-src=\\\"{{ srcUrl + element[filter] }}\\\" class=\\\"img-thumbnail\\\" alt=\\\"\\\">\";\n    strTemplate += \"                <\\/div>\";\n    strTemplate += \"              <\\/div>\";\n    strTemplate += \"\";\n    strTemplate += \"              <button type=\\\"button\\\" class=\\\"btn btn-white no-border\\\" ng-click=\\\"loadMore()\\\" style=\\\"width: 100%;\\\">\";\n    strTemplate += \"                <i class=\\\"glyphicon glyphicon-plus\\\"><\\/i>\";\n    strTemplate += \"                Show More\";\n    strTemplate += \"              <\\/button>\";\n    strTemplate += \"            <\\/div>\";\n    strTemplate += \"          <\\/div>\";\n    strTemplate += \"        <\\/div>\";\n    strTemplate += \"        <div class=\\\"modal-footer\\\">\";\n    strTemplate += \"          <button type=\\\"button\\\" class=\\\"btn btn-default no-border\\\" data-dismiss=\\\"modal\\\">\";\n    strTemplate += \"            <translate>Close<\\/translate>\";\n    strTemplate += \"          <\\/button>\";\n    strTemplate += \"          <button type=\\\"button\\\" class=\\\"btn btn-primary no-border\\\" ng-click=\\\"selectSaveCtrl(); selectSave()\\\">\";\n    strTemplate += \"            <translate>Ok<\\/translate>\";\n    strTemplate += \"          <\\/button>\";\n    strTemplate += \"        <\\/div>\";\n    strTemplate += \"      <\\/div>\";\n    strTemplate += \"    <\\/div>\";\n    strTemplate += \"  <\\/div>\";\n    strTemplate += \"<\\/div>\";\n\n    return {\n      restrict  : 'A',\n      replace   : true,\n      transclude: true,\n      require   : '?ngModel',\n      scope     : {\n        model      : '=ngModel',\n        headTitle  : '@?head',\n        apiUrl     : '@?api',\n        srcUrl     : '@?url',\n        multiple   : '=?multiple',\n        returnModel: '@?return',\n        accept     : '@?',\n        order      : '@?',\n        filter     : '@?'\n      },\n      template  : strTemplate,\n\n      link: function (scope, element) {\n        // Open modal.\n        scope.openMediaModal = function () {\n          element.find('.cfmedia-modal').modal();\n        };\n\n        scope.selectSave = function () {\n          element.find('.cfmedia-modal').modal('hide');\n        };\n      },\n\n      controller: ['$scope', '$timeout', 'Upload', 'Media', function ($scope, $timeout, Upload, Media) {\n        $scope.apiUrl = angular.isDefined($scope.apiUrl) ? $scope.apiUrl : 'api/media';\n        $scope.srcUrl = angular.isDefined($scope.srcUrl) ? $scope.srcUrl : '/public/upload/';\n\n        $scope.elementsSelected = [];\n\n        $scope.params = {\n          limit : 10,\n          offset: 0,\n          search: ''\n        };\n\n        if ($scope.apiUrl) {\n          $scope.progress = 0;\n          var originalModel = angular.copy($scope.model);\n\n          $scope.$watch('modelUpload', function () {\n            if ($scope.modelUpload) {\n              $scope.upload($scope.modelUpload);\n            }\n          });\n\n          /**\n           * Function to upload files.\n           *\n           * @param file\n           */\n          $scope.upload = function (file) {\n            angular.forEach(file, function (item) {\n              $scope.progress = '';\n              Upload.upload({\n                url   : $scope.apiUrl,\n                fields: {},\n                file  : item\n              }).progress(function (evt) {\n                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                $scope.progress = progressPercentage;\n              }).success(function (result) {\n                $scope.elements.push(result);\n              }).error(function (data, status, headers, config) {\n                console.log('error status: ' + status);\n              })\n            });\n          };\n\n          /**\n           * Function to instantiate and check the elements selected.\n           *\n           * @param element\n           * @param index\n           */\n          $scope.select = function (element, index) {\n            if (is.not.inArray(element, $scope.elementsSelected)) {\n              if ($scope.multiple) {\n                element.activeClass = true;\n                $scope.elementsSelected.push(element);\n              } else {\n                angular.forEach($scope.elements, function (value, key) {\n                  $scope.elements[key].activeClass = false;\n                });\n                element.activeClass = true;\n                $scope.elementsSelected = [];\n                $scope.elementsSelected.push(element);\n              }\n            } else {\n              angular.forEach($scope.elementsSelected, function (value, key) {\n                if (value == element) {\n                  $scope.elements[index].activeClass = false;\n                  $scope.elementsSelected.splice(key, 1);\n                }\n              });\n            }\n          };\n\n          /**\n           * Function to execute when open modal.\n           */\n          $scope.openMediaModalCtrl = function () {\n            $scope.multiple = angular.isDefined($scope.multiple) ? $scope.multiple : true;\n            $scope.headTitle = angular.isDefined($scope.headTitle) ? $scope.headTitle : 'Change Imagen';\n            $scope.returnModel = angular.isDefined($scope.returnModel) ? $scope.returnModel : 'object';\n            $scope.accept = angular.isDefined($scope.accept) ? $scope.accept : 'image/*';\n            $scope.order = angular.isDefined($scope.order) ? $scope.order : 'date';\n            $scope.filter = angular.isDefined($scope.filter) ? $scope.filter : 'meta';\n\n            $scope.params = {\n              limit : 10,\n              offset: 0,\n              search: ''\n            };\n\n            $scope.elementsSelected = [];\n            $scope.elements = [];\n\n            Media.getAll({\n              limit : $scope.params.limit,\n              offset: $scope.params.offset,\n              search: $scope.params.search\n            }, function (result) {\n              $scope.elements = angular.copy(result);\n            });\n          };\n\n          /**\n           * Function to instantiate model with the selected values.\n           */\n          $scope.selectSaveCtrl = function () {\n            if ($scope.elementsSelected.length > 0) {\n              if ($scope.multiple) {\n                if ($scope.returnModel == 'string') {\n                  angular.forEach($scope.elementsSelected, function (value) {\n                    $scope.model.push(value.meta);\n                  });\n                } else if ($scope.returnModel == 'object') {\n                  $scope.model = $scope.elementsSelected;\n                }\n              } else {\n                if ($scope.returnModel == 'string') {\n                  $scope.model = $scope.elementsSelected[0].meta;\n                } else if ($scope.returnModel == 'object') {\n                  $scope.model = $scope.elementsSelected[0];\n                }\n              }\n            } else {\n              alert('Please select one element.');\n            }\n          };\n\n          /**\n           * Function to load more elements from DB.\n           */\n          $scope.loadMore = function () {\n            $scope.params.offset = ($scope.params.offset == 0) ? $scope.params.offset + $scope.params.limit : $scope.params.offset + $scope.params.offset;\n\n            Media.getAll({\n              limit : $scope.params.limit,\n              offset: $scope.params.offset,\n              search: $scope.params.search\n            }, function (result) {\n              if (result.length > 0) {\n                angular.forEach(result, function (value) {\n                  $scope.elements.push(value);\n                });\n              } else {\n                alert('No more elements in DB.');\n              }\n            });\n          };\n\n          $scope.$watch('search', function (newValue) {\n            $scope.params.search = newValue;\n            $scope.params.offset = 0;\n\n            Media.getAll({\n              limit : $scope.params.limit,\n              offset: $scope.params.offset,\n              search: $scope.params.search\n            }, function (result) {\n              if (result.length > 0) {\n                $scope.elements = angular.copy(result);\n              } else {\n                alert('No more elements in DB.');\n              }\n            });\n          });\n        }\n      }]\n    }\n  }]);"]}