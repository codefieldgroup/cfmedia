{"name":"cfmedia","tagline":"CFMedia is a simple directive to media upload inspired by Wordpress media style and based on the directive https://github.com/danialfarid/ng-file-upload.","body":"# CFMedia Directive to AngularJS\r\n\r\nCFMedia is a simple directive to media upload inspired by Wordpress media style and based on the directive [ng-file-upload](https://github.com/danialfarid/ng-file-upload).\r\n\r\n## It is assumed\r\n- Install nodejs: `sudo apt-get install nodejs npm`\r\n- Install bower and update: `sudo npm install -g bower` and `bower update`\r\n\r\n## Usage\r\n- With bower: `bower install --save cfmedia`\r\n- Add **cf** as a dependency to your app. Example:\r\n```\r\nangular.module('example', [\r\n    'cf'\r\n])\r\n```\r\n\r\n## In html:\r\n\r\nExternal libraries scripts:\r\n\r\n```\r\n<script src=\"./bower_components/is_js/is.min.js\"></script>\r\n<script src=\"./bower_components/ng-file-upload-shim/ng-file-upload-shim.min.js\"></script>\r\n<script src=\"./bower_components/ng-file-upload/ng-file-upload.min.js\"></script>\r\n```\r\nDirective script:\r\n\r\n```\r\n<script src=\"./bower_components/cfmedia/dist/cfmedia.min.js\"></script>\r\n```\r\n\r\nUsage:\r\n\r\n```\r\n<div cfmedia\r\n    ng-model=\"test\"\r\n    multiple=\"false\"\r\n    url=\"/public/path/upload/\"\r\n    accept=\"image/*,application/pdf\"\r\n    api=\"api/media\"\r\n    order=\"date\"\r\n    head=\"Upload Image\">\r\n      <button type=\"button\" class=\"btn btn-default\">View Media Upload</button>\r\n</div>\r\n```\r\n\r\n## Options\r\nThe directive accepts the following attributes:\r\n\r\n| Option | Description |\r\n|--------|--------|\r\n|    ng-model    |    Required    |\r\n|    head    |    Optional. Default value is 'Change Image'. String with the title of the modal.    |\r\n|    api    |    Optional. Default value is 'api/media'. String with the route of api media.    |\r\n|    url    |    Optional. Default value is '/public/path/upload/'. String with the url to path of public images.    |\r\n|    multiple    |    Optional. Default value is true. Boolean with the options to multiples images or not.    |\r\n|    return    |    Optional. Default value is 'object'. String with the format to return result, \"string\" or \"object\".  |\r\n|        |    If \"string\" then only return the meta field of image object.    |\r\n|        |    If \"object\" then return the image object.    |\r\n|    accept    |    Optional. Default value is 'image/*'. String with function or comma separated wildcard to filter files allowed.    |\r\n|        |    .pdf,.jpg    |\r\n|        |    image/*,application/pdf    |\r\n|        |    audio/*,video/*    |\r\n|    order    |    Optional. Default value is 'date'. String with the option to order by elements result.    |\r\n|    filter    |    Optional. Default value is 'meta'. String with field name of object that contain image name, example: dc3443.png    |\r\n\r\n#### Factory - Required\r\n\r\nFactory with name **Media** and function with name **getAll**.\r\n\r\nWhere **getAll** return a object list where each object contain a **meta** field with the name of the image saved in the public folder\r\n\r\nIf your model not contain a **meta** field then you should specify the name of the field in the option **filter** of the directive cfmedia.\r\n\r\n`filter=\"meta\"`\r\n\r\nThe idea is have an only model in order to work with all the images.\r\n\r\n###### Example of Media Model with $http\r\n\r\n```\r\n.factory('Media', ['$http', function ($http) {\r\n    var route = 'media';\r\n\r\n    return {\r\n\r\n      /**\r\n       * Get all element by pagination or not.\r\n       *\r\n       * @param jsonObject : Object to getting the data with pagination. Example of their parameters:\r\n       *  {\r\n       *   limit : 10,\r\n       *   offset: 0,\r\n       *   search: ''\r\n       *  }\r\n       * @param callback\r\n       */\r\n      getAll: function (jsonObject, callback) {\r\n        $http({\r\n          method: 'GET',\r\n          url   : route,\r\n          params: jsonObject\r\n        })\r\n          .success(function (result) {\r\n            callback(result);\r\n          })\r\n          .error(function (error, status) {\r\n            console.log('not access: ', status, error);\r\n          });\r\n      }\r\n\r\n    }\r\n}])\r\n```\r\n\r\n###### Example of Media Model with Restangular\r\n\r\n```\r\n.factory('Media', ['Restangular', function (Restangular) {\r\n    var route = 'media';\r\n\r\n    return {\r\n      all         : Restangular.all(route),\r\n      service     : Restangular.service(route),\r\n\r\n      /**\r\n       * Get all element by pagination or not.\r\n       *\r\n       * @param jsonObject : Object to getting the data with pagination. Example of their parameters:\r\n       *  {\r\n       *   limit : 10,\r\n       *   offset: 0,\r\n       *   search: ''\r\n       *  }\r\n       * @param callback\r\n       */\r\n      getAll      : function (jsonObject, callback) {\r\n        Restangular.all(route).customGET('', {\r\n          code  : 'list',\r\n          limit : jsonObject.limit,\r\n          offset: jsonObject.offset,\r\n          search: jsonObject.search\r\n        }).then(function (result) { // Success.\r\n            callback(result.data);\r\n          },\r\n          function (error) { // Error from server.\r\n            console.log('not access: ', error);\r\n          })\r\n      }\r\n}])\r\n```\r\n\r\n## Installation for used example\r\n\r\n#### Apache Server\r\n\r\n- Copy cfmedia folder to /var/www/html/\r\n- Open browser with URL: [http://localhost/cfmedia/example/](http://localhost/cfmedia/example/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}